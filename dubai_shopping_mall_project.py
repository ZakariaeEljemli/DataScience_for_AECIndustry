# -*- coding: utf-8 -*-
"""Dubai Shopping Mall Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-BDSVIorE0X7k3jR3djiqeBb-sXYBeiZ
"""

import pandas as pd

df = pd.DataFrame({"a":[1,2,3],"b":[2,4,6],"c":[8,9,10]},index = ["voiture","v√©lo","trottinette"])

df

from google.colab import drive
drive.mount('/content/gdrive')
import os

os.chdir("/content/gdrive/My Drive/EDX Data Science for Construction, Architecture and Engineering/2 - Building Design - Intro to Pandas/simulation_data")

ls

df = pd.DataFrame(
[[4, 7, 10],
[5, 8, 11],
[6, 9, 12]],
index=[1, 2, 3],
columns=['a', 'b', 'c'])

df

baseline_data = pd.read_csv('Baseline.csv',index_col='Month')

baseline_data

baseline_data.index

baseline_data.columns

baseline_data.info()

baseline_data.Baseline

baseline_data[baseline_data['Baseline'] < 10]

"""##Sort by values"""

baseline_data.sort_values('Baseline')

"""##Sort by index"""

baseline_data.sort_index()

"""##Select n random values from the table"""

baseline_data.sample(n=6)

baseline_data.rename(columns={'Baseline':'Baseline Cooling Consumption in GWh'})

baseline_data.columns.name = 'Scenario'
baseline_data.index.name = 'Months of the Year'
baseline_data.plot(lw=2, colormap='jet', marker='.', markersize=10, 
        title='Cooling Energy Consumption of Baseline Building in Total GWh')

"""##Analyze the cooling system within opening hours"""

schedule_scenario = pd.read_csv("Scenario - Aircon Schedules.csv", index_col="Month")

schedule_scenario

"""Looks like the Schedule scenario uses less energy than the baseline - let's confirm this by combining the two DataFrames using the .concat() function"""

schedule_scenario.rename(columns={'Scenario - Aircon Schedules':'Cooling System when opening'})

combined_data = pd.concat([baseline_data, schedule_scenario], axis=1)

combined_data

combined_data.plot(lw=2, colormap='jet', marker='.', markersize=10, 
        title='Cooling Energy Consumption of Baseline Building in Total GWh')

"""## Make New Columns to Find the Difference between the options

Let's use a vector operation to create a new column to find the difference between the columns
"""

combined_data['Difference (GWh)'] = combined_data['Baseline'] - combined_data['Scenario - Aircon Schedules']
combined_data

combined_data['Difference (GWh)'].plot.bar(title='Difference between Baseline and Improved Schedules in Total GWh')

"""## Define a *function* object to create a new column

Let's say we only care to compare all the months except *July* -- we can define a function to calculate a new column
"""

def get_difference_conditional(monthly_data):
  #print(monthly_data)
  if monthly_data.name == 'July' or monthly_data.name =='August':
    return 0
  else:
    return monthly_data['Baseline'] - monthly_data['Scenario - Aircon Schedules']

combined_data['Difference_NoJuly'] = combined_data.apply(lambda x: get_difference_conditional(x), axis=1)

combined_data['Difference_NoJuly'].plot.bar(title='Difference between Baseline and Improved Schedules in Total GWh')

"""##Compare several scenarios in the same time"""

os.listdir

ls

list_of_files = ['Scenario - Aircon Schedules.csv',
 'Scenario - Cool roof.csv',
 'Scenario - Rooftop Gardens.csv',
 'Scenario - Increase Setpoint.csv',
 'Scenario - Low-E Glass.csv',
 'Baseline.csv']

data_container = []
for filename in list_of_files:
  print(filename)
  df = pd.read_csv(filename, index_col='Month')
  data_container.append(df)

all_data = pd.concat(data_container, axis=1)

all_data.info()

all_data

all_data.plot(lw=2, colormap='jet', marker='.', markersize=10, 
        title='Cooling Energy Consumption of Baseline Building in Total GWh', figsize=(15,8))

"""Now we have all the data in one DataFrame, but now what? I think we need to subtract the baseline from each column. I'm not sure how to do that."""

data_substrated = all_data.subtract(all_data['Baseline'], axis=0)

data_substrated

data_substrated.sum().plot.bar()

"""Turns out that Increasing the setpoing is by far the most effective energy savings option! Schedules are second place and cool roof is third. The Rooftop gardens and Low-E glass seem to have only a bit of impact for this building"""